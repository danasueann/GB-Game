                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.1 #15267 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	
                                      7 ;--------------------------------------------------------
                                      8 ; Public variables in this module
                                      9 ;--------------------------------------------------------
                                     10 	.globl _clear_sprites
                                     11 	.globl _clear_background
                                     12 	.globl _main
                                     13 	.globl _set_sprite_data
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _wait_vbl_done
                                     17 	.globl _joypad
                                     18 	.globl _selected_pet
                                     19 	.globl _setup_home_background
                                     20 	.globl _setup_select_menu_background
                                     21 	.globl _choose_pet
                                     22 	.globl _setup_cat
                                     23 	.globl _setup_cat_home
                                     24 	.globl _setup_jester
                                     25 	.globl _setup_jester_home
                                     26 ;--------------------------------------------------------
                                     27 ; special function registers
                                     28 ;--------------------------------------------------------
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DATA
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _INITIALIZED
    00000000                         37 _selected_pet::
    00000000                         38 	.ds 1
                                     39 ;--------------------------------------------------------
                                     40 ; absolute external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area _DABS (ABS)
                                     43 ;--------------------------------------------------------
                                     44 ; global & static initialisations
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _GSINIT
                                     48 	.area _GSFINAL
                                     49 	.area _GSINIT
                                     50 ;--------------------------------------------------------
                                     51 ; Home
                                     52 ;--------------------------------------------------------
                                     53 	.area _HOME
                                     54 	.area _HOME
                                     55 ;--------------------------------------------------------
                                     56 ; code
                                     57 ;--------------------------------------------------------
                                     58 	.area _CODE
                                     59 ;home.h:12: void setup_home_background()
                                     60 ;	---------------------------------
                                     61 ; Function setup_home_background
                                     62 ; ---------------------------------
    00000000                         63 _setup_home_background::
                                     64 ;home.h:15: set_bkg_data(0, 216, background_final_tiles);
    00000000 11r00r00         [12]   65 	ld	de, #_background_final_tiles
    00000003 D5               [16]   66 	push	de
    00000004 21 00 D8         [12]   67 	ld	hl, #0xd800
    00000007 E5               [16]   68 	push	hl
    00000008 CDr00r00         [24]   69 	call	_set_bkg_data
    0000000B E8 04            [16]   70 	add	sp, #4
                                     71 ;home.h:16: set_bkg_tiles(0, 0, 20, 18, background_final_map);
    0000000D 11r00r00         [12]   72 	ld	de, #_background_final_map
    00000010 D5               [16]   73 	push	de
    00000011 21 14 12         [12]   74 	ld	hl, #0x1214
    00000014 E5               [16]   75 	push	hl
    00000015 AF               [ 4]   76 	xor	a, a
    00000016 0F               [ 4]   77 	rrca
    00000017 F5               [16]   78 	push	af
    00000018 CDr00r00         [24]   79 	call	_set_bkg_tiles
    0000001B E8 06            [16]   80 	add	sp, #6
                                     81 ;home.h:18: SHOW_BKG;
    0000001D F0r00            [12]   82 	ldh	a, (_LCDC_REG + 0)
    0000001F F6 01            [ 8]   83 	or	a, #0x01
    00000021 E0r00            [12]   84 	ldh	(_LCDC_REG + 0), a
                                     85 ;home.h:19: DISPLAY_ON;
    00000023 F0r00            [12]   86 	ldh	a, (_LCDC_REG + 0)
    00000025 F6 80            [ 8]   87 	or	a, #0x80
    00000027 E0r00            [12]   88 	ldh	(_LCDC_REG + 0), a
                                     89 ;home.h:20: }
    00000029 C9               [16]   90 	ret
                                     91 ;SelectMenu.h:13: void setup_select_menu_background()
                                     92 ;	---------------------------------
                                     93 ; Function setup_select_menu_background
                                     94 ; ---------------------------------
    0000002A                         95 _setup_select_menu_background::
                                     96 ;SelectMenu.h:16: set_bkg_data(0, 216, SelectMenu_tileset);
    0000002A 11r00r00         [12]   97 	ld	de, #_SelectMenu_tileset
    0000002D D5               [16]   98 	push	de
    0000002E 21 00 D8         [12]   99 	ld	hl, #0xd800
    00000031 E5               [16]  100 	push	hl
    00000032 CDr00r00         [24]  101 	call	_set_bkg_data
    00000035 E8 04            [16]  102 	add	sp, #4
                                    103 ;SelectMenu.h:17: set_bkg_tiles(0, 0, 20, 18, SelectMenu_tilemap);
    00000037 11r00r00         [12]  104 	ld	de, #_SelectMenu_tilemap
    0000003A D5               [16]  105 	push	de
    0000003B 21 14 12         [12]  106 	ld	hl, #0x1214
    0000003E E5               [16]  107 	push	hl
    0000003F AF               [ 4]  108 	xor	a, a
    00000040 0F               [ 4]  109 	rrca
    00000041 F5               [16]  110 	push	af
    00000042 CDr00r00         [24]  111 	call	_set_bkg_tiles
    00000045 E8 06            [16]  112 	add	sp, #6
                                    113 ;SelectMenu.h:19: SHOW_BKG;
    00000047 F0r00            [12]  114 	ldh	a, (_LCDC_REG + 0)
    00000049 F6 01            [ 8]  115 	or	a, #0x01
    0000004B E0r00            [12]  116 	ldh	(_LCDC_REG + 0), a
                                    117 ;SelectMenu.h:20: DISPLAY_ON;
    0000004D F0r00            [12]  118 	ldh	a, (_LCDC_REG + 0)
    0000004F F6 80            [ 8]  119 	or	a, #0x80
    00000051 E0r00            [12]  120 	ldh	(_LCDC_REG + 0), a
                                    121 ;SelectMenu.h:21: }
    00000053 C9               [16]  122 	ret
                                    123 ;SelectMenu.h:23: UBYTE choose_pet(void)
                                    124 ;	---------------------------------
                                    125 ; Function choose_pet
                                    126 ; ---------------------------------
    00000054                        127 _choose_pet::
                                    128 ;SelectMenu.h:25: while (1)
    00000054                        129 00107$:
                                    130 ;SelectMenu.h:27: UBYTE mButtons = joypad();
    00000054 CDr00r00         [24]  131 	call	_joypad
                                    132 ;SelectMenu.h:29: if (mButtons & J_A)
    00000057 CB 67            [ 8]  133 	bit	4, a
    00000059 28 02            [12]  134 	jr	Z, 00104$
                                    135 ;SelectMenu.h:31: return 0; // CAT selected
    0000005B AF               [ 4]  136 	xor	a, a
    0000005C C9               [16]  137 	ret
    0000005D                        138 00104$:
                                    139 ;SelectMenu.h:33: else if (mButtons & J_B)
    0000005D CB 6F            [ 8]  140 	bit	5, a
    0000005F 28 03            [12]  141 	jr	Z, 00105$
                                    142 ;SelectMenu.h:35: return 1; // JESTER selected
    00000061 3E 01            [ 8]  143 	ld	a, #0x01
    00000063 C9               [16]  144 	ret
    00000064                        145 00105$:
                                    146 ;SelectMenu.h:37: wait_vbl_done();
    00000064 CDr00r00         [24]  147 	call	_wait_vbl_done
                                    148 ;SelectMenu.h:39: }
    00000067 18 EB            [12]  149 	jr	00107$
                                    150 ;cat_animated.h:12: void setup_cat(int start_x, int start_y)
                                    151 ;	---------------------------------
                                    152 ; Function setup_cat
                                    153 ; ---------------------------------
    00000069                        154 _setup_cat::
    00000069 E8 F8            [16]  155 	add	sp, #-8
    0000006B F8 04            [12]  156 	ldhl	sp,	#4
    0000006D 7B               [ 4]  157 	ld	a, e
    0000006E 22               [ 8]  158 	ld	(hl+), a
    0000006F 72               [ 8]  159 	ld	(hl), d
    00000070 F8 02            [12]  160 	ldhl	sp,	#2
    00000072 79               [ 4]  161 	ld	a, c
    00000073 22               [ 8]  162 	ld	(hl+), a
    00000074 70               [ 8]  163 	ld	(hl), b
                                    164 ;cat_animated.h:15: set_sprite_data(0, cat_size, cat);
    00000075 11r00r00         [12]  165 	ld	de, #_cat
    00000078 D5               [16]  166 	push	de
    00000079 21 00 11         [12]  167 	ld	hl, #0x1100
    0000007C E5               [16]  168 	push	hl
    0000007D CDr00r00         [24]  169 	call	_set_sprite_data
    00000080 E8 04            [16]  170 	add	sp, #4
                                    171 ;cat_animated.h:17: for (int i = 0; i < cat_size; i++)
    00000082 F8 07            [12]  172 	ldhl	sp,	#7
    00000084 36 00            [12]  173 	ld	(hl), #0x00
    00000086                        174 00109$:
    00000086 F8 07            [12]  175 	ldhl	sp,	#7
    00000088 7E               [ 8]  176 	ld	a, (hl)
    00000089 D6 11            [ 8]  177 	sub	a, #0x11
    0000008B 30 21            [12]  178 	jr	NC, 00101$
                                    179 ;cat_animated.h:19: set_sprite_tile(i, cat_tilemap[i]);
    0000008D 11r00r00         [12]  180 	ld	de, #_cat_tilemap
    00000090 6E               [ 8]  181 	ld	l, (hl)
    00000091 26 00            [ 8]  182 	ld	h, #0x00
    00000093 19               [ 8]  183 	add	hl, de
    00000094 33               [ 8]  184 	inc	sp
    00000095 33               [ 8]  185 	inc	sp
    00000096 5D               [ 4]  186 	ld	e, l
    00000097 54               [ 4]  187 	ld	d, h
    00000098 D5               [16]  188 	push	de
    00000099 1A               [ 8]  189 	ld	a, (de)
    0000009A 4F               [ 4]  190 	ld	c, a
    0000009B F8 07            [12]  191 	ldhl	sp,	#7
                                    192 ;c:\gbdk\include\gb\gb.h:1887: shadow_OAM[nb].tile=tile;
    0000009D 6E               [ 8]  193 	ld	l, (hl)
    0000009E 11r00r00         [12]  194 	ld	de, #_shadow_OAM+0
    000000A1 26 00            [ 8]  195 	ld	h, #0x00
    000000A3 29               [ 8]  196 	add	hl, hl
    000000A4 29               [ 8]  197 	add	hl, hl
    000000A5 19               [ 8]  198 	add	hl, de
    000000A6 23               [ 8]  199 	inc	hl
    000000A7 23               [ 8]  200 	inc	hl
    000000A8 71               [ 8]  201 	ld	(hl), c
                                    202 ;cat_animated.h:17: for (int i = 0; i < cat_size; i++)
    000000A9 F8 07            [12]  203 	ldhl	sp,	#7
    000000AB 34               [12]  204 	inc	(hl)
    000000AC 18 D8            [12]  205 	jr	00109$
    000000AE                        206 00101$:
                                    207 ;cat_animated.h:24: int sprite_index = 0;
    000000AE 01 00 00         [12]  208 	ld	bc, #0x0000
                                    209 ;cat_animated.h:26: for (int row = 0; row < 4; row++)
    000000B1 F8 06            [12]  210 	ldhl	sp,	#6
    000000B3 36 00            [12]  211 	ld	(hl), #0x00
    000000B5                        212 00115$:
    000000B5 F8 06            [12]  213 	ldhl	sp,	#6
    000000B7 7E               [ 8]  214 	ld	a, (hl)
    000000B8 D6 04            [ 8]  215 	sub	a, #0x04
    000000BA 30 62            [12]  216 	jr	NC, 00105$
                                    217 ;cat_animated.h:28: for (int col = 0; col < 4; col++)
    000000BC 23               [ 8]  218 	inc	hl
    000000BD 36 00            [12]  219 	ld	(hl), #0x00
    000000BF                        220 00112$:
    000000BF F8 07            [12]  221 	ldhl	sp,	#7
    000000C1 7E               [ 8]  222 	ld	a, (hl)
    000000C2 D6 04            [ 8]  223 	sub	a, #0x04
    000000C4 30 53            [12]  224 	jr	NC, 00127$
                                    225 ;cat_animated.h:30: move_sprite(sprite_index, start_x + col * tile_width, start_y + row * tile_height);
    000000C6 F8 02            [12]  226 	ldhl	sp,	#2
    000000C8 3A               [ 8]  227 	ld	a, (hl-)
    000000C9 77               [ 8]  228 	ld	(hl), a
    000000CA F8 06            [12]  229 	ldhl	sp,	#6
    000000CC 7E               [ 8]  230 	ld	a, (hl)
    000000CD 87               [ 4]  231 	add	a, a
    000000CE 87               [ 4]  232 	add	a, a
    000000CF 87               [ 4]  233 	add	a, a
    000000D0 F8 01            [12]  234 	ldhl	sp,	#1
    000000D2 86               [ 8]  235 	add	a, (hl)
    000000D3 2B               [ 8]  236 	dec	hl
    000000D4 77               [ 8]  237 	ld	(hl), a
    000000D5 F8 04            [12]  238 	ldhl	sp,	#4
    000000D7 7E               [ 8]  239 	ld	a, (hl)
    000000D8 F8 01            [12]  240 	ldhl	sp,	#1
    000000DA 77               [ 8]  241 	ld	(hl), a
    000000DB F8 07            [12]  242 	ldhl	sp,	#7
    000000DD 7E               [ 8]  243 	ld	a, (hl)
    000000DE 87               [ 4]  244 	add	a, a
    000000DF 87               [ 4]  245 	add	a, a
    000000E0 87               [ 4]  246 	add	a, a
    000000E1 F8 01            [12]  247 	ldhl	sp,	#1
    000000E3 86               [ 8]  248 	add	a, (hl)
    000000E4 77               [ 8]  249 	ld	(hl), a
    000000E5 59               [ 4]  250 	ld	e, c
                                    251 ;c:\gbdk\include\gb\gb.h:1973: OAM_item_t * itm = &shadow_OAM[nb];
    000000E6 AF               [ 4]  252 	xor	a, a
    000000E7 6B               [ 4]  253 	ld	l, e
    000000E8 67               [ 4]  254 	ld	h, a
    000000E9 29               [ 8]  255 	add	hl, hl
    000000EA 29               [ 8]  256 	add	hl, hl
    000000EB 11r00r00         [12]  257 	ld	de, #_shadow_OAM
    000000EE 19               [ 8]  258 	add	hl, de
    000000EF 5D               [ 4]  259 	ld	e, l
    000000F0 54               [ 4]  260 	ld	d, h
                                    261 ;c:\gbdk\include\gb\gb.h:1974: itm->y=y, itm->x=x;
    000000F1 F8 00            [12]  262 	ldhl	sp,	#0
    000000F3 2A               [ 8]  263 	ld	a, (hl+)
    000000F4 12               [ 8]  264 	ld	(de), a
    000000F5 13               [ 8]  265 	inc	de
    000000F6 7E               [ 8]  266 	ld	a, (hl)
    000000F7 12               [ 8]  267 	ld	(de), a
                                    268 ;cat_animated.h:31: sprite_index++;
    000000F8 03               [ 8]  269 	inc	bc
                                    270 ;cat_animated.h:32: if (sprite_index > 15)
    000000F9 58               [ 4]  271 	ld	e, b
    000000FA 16 00            [ 8]  272 	ld	d, #0x00
    000000FC 3E 0F            [ 8]  273 	ld	a, #0x0f
    000000FE B9               [ 4]  274 	cp	a, c
    000000FF 3E 00            [ 8]  275 	ld	a, #0x00
    00000101 98               [ 4]  276 	sbc	a, b
    00000102 CB 7B            [ 8]  277 	bit	7, e
    00000104 28 07            [12]  278 	jr	Z, 00171$
    00000106 CB 7A            [ 8]  279 	bit	7, d
    00000108 20 08            [12]  280 	jr	NZ, 00172$
    0000010A BF               [ 4]  281 	cp	a, a
    0000010B 18 05            [12]  282 	jr	00172$
    0000010D                        283 00171$:
    0000010D CB 7A            [ 8]  284 	bit	7, d
    0000010F 28 01            [12]  285 	jr	Z, 00172$
    00000111 37               [ 4]  286 	scf
    00000112                        287 00172$:
    00000112 38 05            [12]  288 	jr	C, 00127$
                                    289 ;cat_animated.h:28: for (int col = 0; col < 4; col++)
    00000114 F8 07            [12]  290 	ldhl	sp,	#7
    00000116 34               [12]  291 	inc	(hl)
    00000117 18 A6            [12]  292 	jr	00112$
    00000119                        293 00127$:
                                    294 ;cat_animated.h:26: for (int row = 0; row < 4; row++)
    00000119 F8 06            [12]  295 	ldhl	sp,	#6
    0000011B 34               [12]  296 	inc	(hl)
    0000011C 18 97            [12]  297 	jr	00115$
    0000011E                        298 00105$:
                                    299 ;cat_animated.h:37: SHOW_SPRITES; // Show the sprites on the screen
    0000011E F0r00            [12]  300 	ldh	a, (_LCDC_REG + 0)
    00000120 F6 02            [ 8]  301 	or	a, #0x02
    00000122 E0r00            [12]  302 	ldh	(_LCDC_REG + 0), a
                                    303 ;cat_animated.h:38: }
    00000124 E8 08            [16]  304 	add	sp, #8
    00000126 C9               [16]  305 	ret
                                    306 ;cat_animated.h:40: void setup_cat_home()
                                    307 ;	---------------------------------
                                    308 ; Function setup_cat_home
                                    309 ; ---------------------------------
    00000127                        310 _setup_cat_home::
                                    311 ;cat_animated.h:42: setup_cat(100, 100);
    00000127 01 64 00         [12]  312 	ld	bc, #0x0064
    0000012A 50               [ 4]  313 	ld	d, b
    0000012B 59               [ 4]  314 	ld	e, c
                                    315 ;cat_animated.h:43: }
    0000012C C3r69r00         [16]  316 	jp	_setup_cat
                                    317 ;jester.h:12: void setup_jester(int start_x, int start_y)
                                    318 ;	---------------------------------
                                    319 ; Function setup_jester
                                    320 ; ---------------------------------
    0000012F                        321 _setup_jester::
    0000012F E8 F8            [16]  322 	add	sp, #-8
    00000131 F8 04            [12]  323 	ldhl	sp,	#4
    00000133 7B               [ 4]  324 	ld	a, e
    00000134 22               [ 8]  325 	ld	(hl+), a
    00000135 72               [ 8]  326 	ld	(hl), d
    00000136 F8 02            [12]  327 	ldhl	sp,	#2
    00000138 79               [ 4]  328 	ld	a, c
    00000139 22               [ 8]  329 	ld	(hl+), a
    0000013A 70               [ 8]  330 	ld	(hl), b
                                    331 ;jester.h:15: set_sprite_data(32, jester_size, jester);
    0000013B 11r00r00         [12]  332 	ld	de, #_jester
    0000013E D5               [16]  333 	push	de
    0000013F 21 20 10         [12]  334 	ld	hl, #0x1020
    00000142 E5               [16]  335 	push	hl
    00000143 CDr00r00         [24]  336 	call	_set_sprite_data
    00000146 E8 04            [16]  337 	add	sp, #4
                                    338 ;jester.h:17: for (int i = 0; i < jester_size; i++)
    00000148 F8 07            [12]  339 	ldhl	sp,	#7
    0000014A 36 00            [12]  340 	ld	(hl), #0x00
    0000014C                        341 00109$:
    0000014C F8 07            [12]  342 	ldhl	sp,	#7
    0000014E 7E               [ 8]  343 	ld	a, (hl)
    0000014F D6 10            [ 8]  344 	sub	a, #0x10
    00000151 30 27            [12]  345 	jr	NC, 00101$
                                    346 ;jester.h:19: set_sprite_tile(i+16, jester_tilemap[i] + 32);
    00000153 11r00r00         [12]  347 	ld	de, #_jester_tilemap
    00000156 6E               [ 8]  348 	ld	l, (hl)
    00000157 26 00            [ 8]  349 	ld	h, #0x00
    00000159 19               [ 8]  350 	add	hl, de
    0000015A 33               [ 8]  351 	inc	sp
    0000015B 33               [ 8]  352 	inc	sp
    0000015C 5D               [ 4]  353 	ld	e, l
    0000015D 54               [ 4]  354 	ld	d, h
    0000015E D5               [16]  355 	push	de
    0000015F 1A               [ 8]  356 	ld	a, (de)
    00000160 C6 20            [ 8]  357 	add	a, #0x20
    00000162 4F               [ 4]  358 	ld	c, a
    00000163 F8 07            [12]  359 	ldhl	sp,	#7
    00000165 7E               [ 8]  360 	ld	a, (hl)
    00000166 C6 10            [ 8]  361 	add	a, #0x10
    00000168 5F               [ 4]  362 	ld	e, a
                                    363 ;c:\gbdk\include\gb\gb.h:1887: shadow_OAM[nb].tile=tile;
    00000169 AF               [ 4]  364 	xor	a, a
    0000016A 6B               [ 4]  365 	ld	l, e
    0000016B 67               [ 4]  366 	ld	h, a
    0000016C 29               [ 8]  367 	add	hl, hl
    0000016D 29               [ 8]  368 	add	hl, hl
    0000016E 11r00r00         [12]  369 	ld	de, #_shadow_OAM
    00000171 19               [ 8]  370 	add	hl, de
    00000172 23               [ 8]  371 	inc	hl
    00000173 23               [ 8]  372 	inc	hl
    00000174 71               [ 8]  373 	ld	(hl), c
                                    374 ;jester.h:17: for (int i = 0; i < jester_size; i++)
    00000175 F8 07            [12]  375 	ldhl	sp,	#7
    00000177 34               [12]  376 	inc	(hl)
    00000178 18 D2            [12]  377 	jr	00109$
    0000017A                        378 00101$:
                                    379 ;jester.h:24: int sprite_index = 16;
    0000017A 01 10 00         [12]  380 	ld	bc, #0x0010
                                    381 ;jester.h:26: for (int row = 0; row < 4; row++)
    0000017D F8 06            [12]  382 	ldhl	sp,	#6
    0000017F 36 00            [12]  383 	ld	(hl), #0x00
    00000181                        384 00115$:
    00000181 F8 06            [12]  385 	ldhl	sp,	#6
    00000183 7E               [ 8]  386 	ld	a, (hl)
    00000184 D6 04            [ 8]  387 	sub	a, #0x04
    00000186 30 62            [12]  388 	jr	NC, 00105$
                                    389 ;jester.h:28: for (int col = 0; col < 4; col++)
    00000188 23               [ 8]  390 	inc	hl
    00000189 36 00            [12]  391 	ld	(hl), #0x00
    0000018B                        392 00112$:
    0000018B F8 07            [12]  393 	ldhl	sp,	#7
    0000018D 7E               [ 8]  394 	ld	a, (hl)
    0000018E D6 04            [ 8]  395 	sub	a, #0x04
    00000190 30 53            [12]  396 	jr	NC, 00127$
                                    397 ;jester.h:30: move_sprite(sprite_index, start_x + col * tile_width, start_y + row * tile_height);
    00000192 F8 02            [12]  398 	ldhl	sp,	#2
    00000194 3A               [ 8]  399 	ld	a, (hl-)
    00000195 77               [ 8]  400 	ld	(hl), a
    00000196 F8 06            [12]  401 	ldhl	sp,	#6
    00000198 7E               [ 8]  402 	ld	a, (hl)
    00000199 87               [ 4]  403 	add	a, a
    0000019A 87               [ 4]  404 	add	a, a
    0000019B 87               [ 4]  405 	add	a, a
    0000019C F8 01            [12]  406 	ldhl	sp,	#1
    0000019E 86               [ 8]  407 	add	a, (hl)
    0000019F 2B               [ 8]  408 	dec	hl
    000001A0 77               [ 8]  409 	ld	(hl), a
    000001A1 F8 04            [12]  410 	ldhl	sp,	#4
    000001A3 7E               [ 8]  411 	ld	a, (hl)
    000001A4 F8 01            [12]  412 	ldhl	sp,	#1
    000001A6 77               [ 8]  413 	ld	(hl), a
    000001A7 F8 07            [12]  414 	ldhl	sp,	#7
    000001A9 7E               [ 8]  415 	ld	a, (hl)
    000001AA 87               [ 4]  416 	add	a, a
    000001AB 87               [ 4]  417 	add	a, a
    000001AC 87               [ 4]  418 	add	a, a
    000001AD F8 01            [12]  419 	ldhl	sp,	#1
    000001AF 86               [ 8]  420 	add	a, (hl)
    000001B0 77               [ 8]  421 	ld	(hl), a
    000001B1 59               [ 4]  422 	ld	e, c
                                    423 ;c:\gbdk\include\gb\gb.h:1973: OAM_item_t * itm = &shadow_OAM[nb];
    000001B2 AF               [ 4]  424 	xor	a, a
    000001B3 6B               [ 4]  425 	ld	l, e
    000001B4 67               [ 4]  426 	ld	h, a
    000001B5 29               [ 8]  427 	add	hl, hl
    000001B6 29               [ 8]  428 	add	hl, hl
    000001B7 11r00r00         [12]  429 	ld	de, #_shadow_OAM
    000001BA 19               [ 8]  430 	add	hl, de
    000001BB 5D               [ 4]  431 	ld	e, l
    000001BC 54               [ 4]  432 	ld	d, h
                                    433 ;c:\gbdk\include\gb\gb.h:1974: itm->y=y, itm->x=x;
    000001BD F8 00            [12]  434 	ldhl	sp,	#0
    000001BF 2A               [ 8]  435 	ld	a, (hl+)
    000001C0 12               [ 8]  436 	ld	(de), a
    000001C1 13               [ 8]  437 	inc	de
    000001C2 7E               [ 8]  438 	ld	a, (hl)
    000001C3 12               [ 8]  439 	ld	(de), a
                                    440 ;jester.h:31: sprite_index++;
    000001C4 03               [ 8]  441 	inc	bc
                                    442 ;jester.h:32: if (sprite_index > 31) // Adjusted to 31 since we have 16 sprites and start from 16
    000001C5 58               [ 4]  443 	ld	e, b
    000001C6 16 00            [ 8]  444 	ld	d, #0x00
    000001C8 3E 1F            [ 8]  445 	ld	a, #0x1f
    000001CA B9               [ 4]  446 	cp	a, c
    000001CB 3E 00            [ 8]  447 	ld	a, #0x00
    000001CD 98               [ 4]  448 	sbc	a, b
    000001CE CB 7B            [ 8]  449 	bit	7, e
    000001D0 28 07            [12]  450 	jr	Z, 00171$
    000001D2 CB 7A            [ 8]  451 	bit	7, d
    000001D4 20 08            [12]  452 	jr	NZ, 00172$
    000001D6 BF               [ 4]  453 	cp	a, a
    000001D7 18 05            [12]  454 	jr	00172$
    000001D9                        455 00171$:
    000001D9 CB 7A            [ 8]  456 	bit	7, d
    000001DB 28 01            [12]  457 	jr	Z, 00172$
    000001DD 37               [ 4]  458 	scf
    000001DE                        459 00172$:
    000001DE 38 05            [12]  460 	jr	C, 00127$
                                    461 ;jester.h:28: for (int col = 0; col < 4; col++)
    000001E0 F8 07            [12]  462 	ldhl	sp,	#7
    000001E2 34               [12]  463 	inc	(hl)
    000001E3 18 A6            [12]  464 	jr	00112$
    000001E5                        465 00127$:
                                    466 ;jester.h:26: for (int row = 0; row < 4; row++)
    000001E5 F8 06            [12]  467 	ldhl	sp,	#6
    000001E7 34               [12]  468 	inc	(hl)
    000001E8 18 97            [12]  469 	jr	00115$
    000001EA                        470 00105$:
                                    471 ;jester.h:37: SHOW_SPRITES; // Show the sprites on the screen
    000001EA F0r00            [12]  472 	ldh	a, (_LCDC_REG + 0)
    000001EC F6 02            [ 8]  473 	or	a, #0x02
    000001EE E0r00            [12]  474 	ldh	(_LCDC_REG + 0), a
                                    475 ;jester.h:38: }
    000001F0 E8 08            [16]  476 	add	sp, #8
    000001F2 C9               [16]  477 	ret
                                    478 ;jester.h:40: void setup_jester_home()
                                    479 ;	---------------------------------
                                    480 ; Function setup_jester_home
                                    481 ; ---------------------------------
    000001F3                        482 _setup_jester_home::
                                    483 ;jester.h:42: setup_jester(100, 100);
    000001F3 01 64 00         [12]  484 	ld	bc, #0x0064
    000001F6 50               [ 4]  485 	ld	d, b
    000001F7 59               [ 4]  486 	ld	e, c
                                    487 ;jester.h:43: }
    000001F8 C3r2Fr01         [16]  488 	jp	_setup_jester
                                    489 ;main.c:14: void main()
                                    490 ;	---------------------------------
                                    491 ; Function main
                                    492 ; ---------------------------------
    000001FB                        493 _main::
                                    494 ;main.c:16: DISPLAY_ON;
    000001FB F0r00            [12]  495 	ldh	a, (_LCDC_REG + 0)
    000001FD F6 80            [ 8]  496 	or	a, #0x80
    000001FF E0r00            [12]  497 	ldh	(_LCDC_REG + 0), a
                                    498 ;main.c:18: setup_select_menu_background();
    00000201 CDr2Ar00         [24]  499 	call	_setup_select_menu_background
                                    500 ;main.c:21: setup_cat(32, 80); // Set up the cat sprite at position (32, 80)
    00000204 01 50 00         [12]  501 	ld	bc, #0x0050
    00000207 11 20 00         [12]  502 	ld	de, #0x0020
    0000020A CDr69r00         [24]  503 	call	_setup_cat
                                    504 ;main.c:24: setup_jester(110, 80); // Set up the jester sprite at position (110, 80)
    0000020D 01 50 00         [12]  505 	ld	bc, #0x0050
    00000210 11 6E 00         [12]  506 	ld	de, #0x006e
    00000213 CDr2Fr01         [24]  507 	call	_setup_jester
                                    508 ;main.c:25: selected_pet = choose_pet();
    00000216 CDr54r00         [24]  509 	call	_choose_pet
    00000219 21r00r00         [12]  510 	ld	hl, #_selected_pet
    0000021C 77               [ 8]  511 	ld	(hl), a
                                    512 ;main.c:27: if (selected_pet == 0)
    0000021D 7E               [ 8]  513 	ld	a, (hl)
    0000021E B7               [ 4]  514 	or	a, a
    0000021F 20 0C            [12]  515 	jr	NZ, 00104$
                                    516 ;main.c:29: clear_background();
    00000221 CDr3Er02         [24]  517 	call	_clear_background
                                    518 ;main.c:30: clear_sprites();
    00000224 CDr55r02         [24]  519 	call	_clear_sprites
                                    520 ;main.c:31: setup_home_background();
    00000227 CDr00r00         [24]  521 	call	_setup_home_background
                                    522 ;main.c:32: setup_cat_home();
    0000022A C3r27r01         [16]  523 	jp	_setup_cat_home
    0000022D                        524 00104$:
                                    525 ;main.c:34: else if (selected_pet == 1)
    0000022D FAr00r00         [16]  526 	ld	a, (#_selected_pet)
    00000230 3D               [ 4]  527 	dec	a
    00000231 C0               [20]  528 	ret	NZ
                                    529 ;main.c:36: clear_background();
    00000232 CDr3Er02         [24]  530 	call	_clear_background
                                    531 ;main.c:37: clear_sprites();
    00000235 CDr55r02         [24]  532 	call	_clear_sprites
                                    533 ;main.c:38: setup_home_background();
    00000238 CDr00r00         [24]  534 	call	_setup_home_background
                                    535 ;main.c:39: setup_jester_home();
                                    536 ;main.c:41: }
    0000023B C3rF3r01         [16]  537 	jp	_setup_jester_home
                                    538 ;main.c:43: clear_background()
                                    539 ;	---------------------------------
                                    540 ; Function clear_background
                                    541 ; ---------------------------------
    0000023E                        542 _clear_background::
                                    543 ;main.c:45: set_bkg_tiles(0, 0, 20, 18, background_final_map);
    0000023E 11r00r00         [12]  544 	ld	de, #_background_final_map
    00000241 D5               [16]  545 	push	de
    00000242 21 14 12         [12]  546 	ld	hl, #0x1214
    00000245 E5               [16]  547 	push	hl
    00000246 AF               [ 4]  548 	xor	a, a
    00000247 0F               [ 4]  549 	rrca
    00000248 F5               [16]  550 	push	af
    00000249 CDr00r00         [24]  551 	call	_set_bkg_tiles
    0000024C E8 06            [16]  552 	add	sp, #6
                                    553 ;main.c:46: SHOW_BKG;
    0000024E F0r00            [12]  554 	ldh	a, (_LCDC_REG + 0)
    00000250 F6 01            [ 8]  555 	or	a, #0x01
    00000252 E0r00            [12]  556 	ldh	(_LCDC_REG + 0), a
                                    557 ;main.c:47: }
    00000254 C9               [16]  558 	ret
                                    559 ;main.c:49: clear_sprites()
                                    560 ;	---------------------------------
                                    561 ; Function clear_sprites
                                    562 ; ---------------------------------
    00000255                        563 _clear_sprites::
                                    564 ;main.c:52: for (UBYTE i = 0; i < 32; i++)
    00000255 0E 00            [ 8]  565 	ld	c, #0x00
    00000257                        566 00104$:
    00000257 79               [ 4]  567 	ld	a, c
    00000258 D6 20            [ 8]  568 	sub	a, #0x20
    0000025A 30 10            [12]  569 	jr	NC, 00101$
                                    570 ;c:\gbdk\include\gb\gb.h:1887: shadow_OAM[nb].tile=tile;
    0000025C 11r00r00         [12]  571 	ld	de, #_shadow_OAM+0
    0000025F 69               [ 4]  572 	ld	l, c
    00000260 AF               [ 4]  573 	xor	a, a
    00000261 67               [ 4]  574 	ld	h, a
    00000262 29               [ 8]  575 	add	hl, hl
    00000263 29               [ 8]  576 	add	hl, hl
    00000264 19               [ 8]  577 	add	hl, de
    00000265 23               [ 8]  578 	inc	hl
    00000266 23               [ 8]  579 	inc	hl
    00000267 36 00            [12]  580 	ld	(hl), #0x00
                                    581 ;main.c:52: for (UBYTE i = 0; i < 32; i++)
    00000269 0C               [ 4]  582 	inc	c
    0000026A 18 EB            [12]  583 	jr	00104$
    0000026C                        584 00101$:
                                    585 ;main.c:56: HIDE_SPRITES;
    0000026C F0r00            [12]  586 	ldh	a, (_LCDC_REG + 0)
    0000026E E6 FD            [ 8]  587 	and	a, #0xfd
    00000270 E0r00            [12]  588 	ldh	(_LCDC_REG + 0), a
                                    589 ;main.c:57: }
    00000272 C9               [16]  590 	ret
                                    591 	.area _CODE
                                    592 	.area _INITIALIZER
    00000000                        593 __xinit__selected_pet:
    00000000 00                     594 	.db #0x00	; 0
                                    595 	.area _CABS (ABS)
