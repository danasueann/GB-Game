                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.1 #15267 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	
                                      7 ;--------------------------------------------------------
                                      8 ; Public variables in this module
                                      9 ;--------------------------------------------------------
                                     10 	.globl _main
                                     11 	.globl _set_sprite_data
                                     12 	.globl _set_bkg_tiles
                                     13 	.globl _set_bkg_data
                                     14 	.globl _setup_select_menu_background
                                     15 	.globl _setup_cat
                                     16 	.globl _setup_jester
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;SelectMenu.h:12: void setup_select_menu_background()
                                     49 ;	---------------------------------
                                     50 ; Function setup_select_menu_background
                                     51 ; ---------------------------------
    00000000                         52 _setup_select_menu_background::
                                     53 ;SelectMenu.h:15: set_bkg_data(0, 216, SelectMenu_tileset);
    00000000 11r00r00         [12]   54 	ld	de, #_SelectMenu_tileset
    00000003 D5               [16]   55 	push	de
    00000004 21 00 D8         [12]   56 	ld	hl, #0xd800
    00000007 E5               [16]   57 	push	hl
    00000008 CDr00r00         [24]   58 	call	_set_bkg_data
    0000000B E8 04            [16]   59 	add	sp, #4
                                     60 ;SelectMenu.h:16: set_bkg_tiles(0, 0, 20, 18, SelectMenu_tilemap);
    0000000D 11r00r00         [12]   61 	ld	de, #_SelectMenu_tilemap
    00000010 D5               [16]   62 	push	de
    00000011 21 14 12         [12]   63 	ld	hl, #0x1214
    00000014 E5               [16]   64 	push	hl
    00000015 AF               [ 4]   65 	xor	a, a
    00000016 0F               [ 4]   66 	rrca
    00000017 F5               [16]   67 	push	af
    00000018 CDr00r00         [24]   68 	call	_set_bkg_tiles
    0000001B E8 06            [16]   69 	add	sp, #6
                                     70 ;SelectMenu.h:18: SHOW_BKG;
    0000001D F0r00            [12]   71 	ldh	a, (_LCDC_REG + 0)
    0000001F F6 01            [ 8]   72 	or	a, #0x01
    00000021 E0r00            [12]   73 	ldh	(_LCDC_REG + 0), a
                                     74 ;SelectMenu.h:19: DISPLAY_ON;
    00000023 F0r00            [12]   75 	ldh	a, (_LCDC_REG + 0)
    00000025 F6 80            [ 8]   76 	or	a, #0x80
    00000027 E0r00            [12]   77 	ldh	(_LCDC_REG + 0), a
                                     78 ;SelectMenu.h:20: }
    00000029 C9               [16]   79 	ret
                                     80 ;cat_animated.h:11: void setup_cat(void)
                                     81 ;	---------------------------------
                                     82 ; Function setup_cat
                                     83 ; ---------------------------------
    0000002A                         84 _setup_cat::
    0000002A E8 FC            [16]   85 	add	sp, #-4
                                     86 ;cat_animated.h:14: set_sprite_data(0, cat_size, cat);
    0000002C 11r00r00         [12]   87 	ld	de, #_cat
    0000002F D5               [16]   88 	push	de
    00000030 21 00 11         [12]   89 	ld	hl, #0x1100
    00000033 E5               [16]   90 	push	hl
    00000034 CDr00r00         [24]   91 	call	_set_sprite_data
    00000037 E8 04            [16]   92 	add	sp, #4
                                     93 ;cat_animated.h:16: for (int i = 0; i < cat_size; i++)
    00000039 0E 00            [ 8]   94 	ld	c, #0x00
    0000003B                         95 00109$:
    0000003B 79               [ 4]   96 	ld	a, c
    0000003C D6 11            [ 8]   97 	sub	a, #0x11
    0000003E 30 16            [12]   98 	jr	NC, 00101$
                                     99 ;cat_animated.h:18: set_sprite_tile(i, cat_tilemap[i]);
    00000040 21r00r00         [12]  100 	ld	hl, #_cat_tilemap
    00000043 06 00            [ 8]  101 	ld	b, #0x00
    00000045 09               [ 8]  102 	add	hl, bc
    00000046 46               [ 8]  103 	ld	b, (hl)
                                    104 ;c:\gbdk\include\gb\gb.h:1887: shadow_OAM[nb].tile=tile;
    00000047 69               [ 4]  105 	ld	l, c
    00000048 26 00            [ 8]  106 	ld	h, #0x00
    0000004A 29               [ 8]  107 	add	hl, hl
    0000004B 29               [ 8]  108 	add	hl, hl
    0000004C 11r00r00         [12]  109 	ld	de, #_shadow_OAM
    0000004F 19               [ 8]  110 	add	hl, de
    00000050 23               [ 8]  111 	inc	hl
    00000051 23               [ 8]  112 	inc	hl
    00000052 70               [ 8]  113 	ld	(hl), b
                                    114 ;cat_animated.h:16: for (int i = 0; i < cat_size; i++)
    00000053 0C               [ 4]  115 	inc	c
    00000054 18 E5            [12]  116 	jr	00109$
    00000056                        117 00101$:
                                    118 ;cat_animated.h:25: int sprite_index = 0;
    00000056 01 00 00         [12]  119 	ld	bc, #0x0000
                                    120 ;cat_animated.h:27: for (int row = 0; row < 4; row++)
    00000059 F8 02            [12]  121 	ldhl	sp,	#2
    0000005B 36 00            [12]  122 	ld	(hl), #0x00
    0000005D                        123 00115$:
    0000005D F8 02            [12]  124 	ldhl	sp,	#2
    0000005F 7E               [ 8]  125 	ld	a, (hl)
    00000060 D6 04            [ 8]  126 	sub	a, #0x04
    00000062 30 56            [12]  127 	jr	NC, 00105$
                                    128 ;cat_animated.h:29: for (int col = 0; col < 4; col++)
    00000064 23               [ 8]  129 	inc	hl
    00000065 36 00            [12]  130 	ld	(hl), #0x00
    00000067                        131 00112$:
    00000067 F8 03            [12]  132 	ldhl	sp,	#3
    00000069 7E               [ 8]  133 	ld	a, (hl)
    0000006A D6 04            [ 8]  134 	sub	a, #0x04
    0000006C 30 47            [12]  135 	jr	NC, 00127$
                                    136 ;cat_animated.h:31: move_sprite(sprite_index, start_x + col * tile_width, start_y + row * tile_height);
    0000006E 2B               [ 8]  137 	dec	hl
    0000006F 3A               [ 8]  138 	ld	a, (hl-)
    00000070 2B               [ 8]  139 	dec	hl
    00000071 87               [ 4]  140 	add	a, a
    00000072 87               [ 4]  141 	add	a, a
    00000073 87               [ 4]  142 	add	a, a
    00000074 C6 50            [ 8]  143 	add	a, #0x50
    00000076 77               [ 8]  144 	ld	(hl), a
    00000077 F8 03            [12]  145 	ldhl	sp,	#3
    00000079 3A               [ 8]  146 	ld	a, (hl-)
    0000007A 2B               [ 8]  147 	dec	hl
    0000007B 87               [ 4]  148 	add	a, a
    0000007C 87               [ 4]  149 	add	a, a
    0000007D 87               [ 4]  150 	add	a, a
    0000007E C6 20            [ 8]  151 	add	a, #0x20
    00000080 77               [ 8]  152 	ld	(hl), a
    00000081 59               [ 4]  153 	ld	e, c
                                    154 ;c:\gbdk\include\gb\gb.h:1973: OAM_item_t * itm = &shadow_OAM[nb];
    00000082 AF               [ 4]  155 	xor	a, a
    00000083 6B               [ 4]  156 	ld	l, e
    00000084 67               [ 4]  157 	ld	h, a
    00000085 29               [ 8]  158 	add	hl, hl
    00000086 29               [ 8]  159 	add	hl, hl
    00000087 11r00r00         [12]  160 	ld	de, #_shadow_OAM
    0000008A 19               [ 8]  161 	add	hl, de
    0000008B 5D               [ 4]  162 	ld	e, l
    0000008C 54               [ 4]  163 	ld	d, h
                                    164 ;c:\gbdk\include\gb\gb.h:1974: itm->y=y, itm->x=x;
    0000008D F8 00            [12]  165 	ldhl	sp,	#0
    0000008F 2A               [ 8]  166 	ld	a, (hl+)
    00000090 12               [ 8]  167 	ld	(de), a
    00000091 13               [ 8]  168 	inc	de
    00000092 7E               [ 8]  169 	ld	a, (hl)
    00000093 12               [ 8]  170 	ld	(de), a
                                    171 ;cat_animated.h:32: sprite_index++;
    00000094 03               [ 8]  172 	inc	bc
                                    173 ;cat_animated.h:33: if (sprite_index > 15)
    00000095 58               [ 4]  174 	ld	e, b
    00000096 16 00            [ 8]  175 	ld	d, #0x00
    00000098 3E 0F            [ 8]  176 	ld	a, #0x0f
    0000009A B9               [ 4]  177 	cp	a, c
    0000009B 3E 00            [ 8]  178 	ld	a, #0x00
    0000009D 98               [ 4]  179 	sbc	a, b
    0000009E CB 7B            [ 8]  180 	bit	7, e
    000000A0 28 07            [12]  181 	jr	Z, 00171$
    000000A2 CB 7A            [ 8]  182 	bit	7, d
    000000A4 20 08            [12]  183 	jr	NZ, 00172$
    000000A6 BF               [ 4]  184 	cp	a, a
    000000A7 18 05            [12]  185 	jr	00172$
    000000A9                        186 00171$:
    000000A9 CB 7A            [ 8]  187 	bit	7, d
    000000AB 28 01            [12]  188 	jr	Z, 00172$
    000000AD 37               [ 4]  189 	scf
    000000AE                        190 00172$:
    000000AE 38 05            [12]  191 	jr	C, 00127$
                                    192 ;cat_animated.h:29: for (int col = 0; col < 4; col++)
    000000B0 F8 03            [12]  193 	ldhl	sp,	#3
    000000B2 34               [12]  194 	inc	(hl)
    000000B3 18 B2            [12]  195 	jr	00112$
    000000B5                        196 00127$:
                                    197 ;cat_animated.h:27: for (int row = 0; row < 4; row++)
    000000B5 F8 02            [12]  198 	ldhl	sp,	#2
    000000B7 34               [12]  199 	inc	(hl)
    000000B8 18 A3            [12]  200 	jr	00115$
    000000BA                        201 00105$:
                                    202 ;cat_animated.h:38: SHOW_SPRITES; // Show the sprites on the screen
    000000BA F0r00            [12]  203 	ldh	a, (_LCDC_REG + 0)
    000000BC F6 02            [ 8]  204 	or	a, #0x02
    000000BE E0r00            [12]  205 	ldh	(_LCDC_REG + 0), a
                                    206 ;cat_animated.h:39: }
    000000C0 E8 04            [16]  207 	add	sp, #4
    000000C2 C9               [16]  208 	ret
                                    209 ;jester.h:11: void setup_jester(void)
                                    210 ;	---------------------------------
                                    211 ; Function setup_jester
                                    212 ; ---------------------------------
    000000C3                        213 _setup_jester::
    000000C3 E8 FC            [16]  214 	add	sp, #-4
                                    215 ;jester.h:14: set_sprite_data(32, jester_size, jester);
    000000C5 11r00r00         [12]  216 	ld	de, #_jester
    000000C8 D5               [16]  217 	push	de
    000000C9 21 20 10         [12]  218 	ld	hl, #0x1020
    000000CC E5               [16]  219 	push	hl
    000000CD CDr00r00         [24]  220 	call	_set_sprite_data
    000000D0 E8 04            [16]  221 	add	sp, #4
                                    222 ;jester.h:16: for (int i = 0; i < jester_size; i++)
    000000D2 0E 00            [ 8]  223 	ld	c, #0x00
    000000D4                        224 00109$:
    000000D4 79               [ 4]  225 	ld	a, c
    000000D5 D6 10            [ 8]  226 	sub	a, #0x10
    000000D7 30 24            [12]  227 	jr	NC, 00101$
                                    228 ;jester.h:18: set_sprite_tile(i+16, jester_tilemap[i] + 32);
    000000D9 21r00r00         [12]  229 	ld	hl, #_jester_tilemap
    000000DC 06 00            [ 8]  230 	ld	b, #0x00
    000000DE 09               [ 8]  231 	add	hl, bc
    000000DF 7E               [ 8]  232 	ld	a, (hl)
    000000E0 C6 20            [ 8]  233 	add	a, #0x20
    000000E2 F8 03            [12]  234 	ldhl	sp,	#3
    000000E4 77               [ 8]  235 	ld	(hl), a
    000000E5 79               [ 4]  236 	ld	a, c
    000000E6 C6 10            [ 8]  237 	add	a, #0x10
    000000E8 5F               [ 4]  238 	ld	e, a
                                    239 ;c:\gbdk\include\gb\gb.h:1887: shadow_OAM[nb].tile=tile;
    000000E9 AF               [ 4]  240 	xor	a, a
    000000EA 6B               [ 4]  241 	ld	l, e
    000000EB 67               [ 4]  242 	ld	h, a
    000000EC 29               [ 8]  243 	add	hl, hl
    000000ED 29               [ 8]  244 	add	hl, hl
    000000EE 11r00r00         [12]  245 	ld	de, #_shadow_OAM
    000000F1 19               [ 8]  246 	add	hl, de
    000000F2 23               [ 8]  247 	inc	hl
    000000F3 23               [ 8]  248 	inc	hl
    000000F4 5D               [ 4]  249 	ld	e, l
    000000F5 54               [ 4]  250 	ld	d, h
    000000F6 F8 03            [12]  251 	ldhl	sp,	#3
    000000F8 7E               [ 8]  252 	ld	a, (hl)
    000000F9 12               [ 8]  253 	ld	(de), a
                                    254 ;jester.h:16: for (int i = 0; i < jester_size; i++)
    000000FA 0C               [ 4]  255 	inc	c
    000000FB 18 D7            [12]  256 	jr	00109$
    000000FD                        257 00101$:
                                    258 ;jester.h:25: int sprite_index = 16;
    000000FD 01 10 00         [12]  259 	ld	bc, #0x0010
                                    260 ;jester.h:27: for (int row = 0; row < 4; row++)
    00000100 F8 02            [12]  261 	ldhl	sp,	#2
    00000102 36 00            [12]  262 	ld	(hl), #0x00
    00000104                        263 00115$:
    00000104 F8 02            [12]  264 	ldhl	sp,	#2
    00000106 7E               [ 8]  265 	ld	a, (hl)
    00000107 D6 04            [ 8]  266 	sub	a, #0x04
    00000109 30 56            [12]  267 	jr	NC, 00105$
                                    268 ;jester.h:29: for (int col = 0; col < 4; col++)
    0000010B 23               [ 8]  269 	inc	hl
    0000010C 36 00            [12]  270 	ld	(hl), #0x00
    0000010E                        271 00112$:
    0000010E F8 03            [12]  272 	ldhl	sp,	#3
    00000110 7E               [ 8]  273 	ld	a, (hl)
    00000111 D6 04            [ 8]  274 	sub	a, #0x04
    00000113 30 47            [12]  275 	jr	NC, 00127$
                                    276 ;jester.h:31: move_sprite(sprite_index, start_x + col * tile_width, start_y + row * tile_height);
    00000115 2B               [ 8]  277 	dec	hl
    00000116 3A               [ 8]  278 	ld	a, (hl-)
    00000117 2B               [ 8]  279 	dec	hl
    00000118 87               [ 4]  280 	add	a, a
    00000119 87               [ 4]  281 	add	a, a
    0000011A 87               [ 4]  282 	add	a, a
    0000011B C6 50            [ 8]  283 	add	a, #0x50
    0000011D 77               [ 8]  284 	ld	(hl), a
    0000011E F8 03            [12]  285 	ldhl	sp,	#3
    00000120 3A               [ 8]  286 	ld	a, (hl-)
    00000121 2B               [ 8]  287 	dec	hl
    00000122 87               [ 4]  288 	add	a, a
    00000123 87               [ 4]  289 	add	a, a
    00000124 87               [ 4]  290 	add	a, a
    00000125 C6 6E            [ 8]  291 	add	a, #0x6e
    00000127 77               [ 8]  292 	ld	(hl), a
    00000128 59               [ 4]  293 	ld	e, c
                                    294 ;c:\gbdk\include\gb\gb.h:1973: OAM_item_t * itm = &shadow_OAM[nb];
    00000129 AF               [ 4]  295 	xor	a, a
    0000012A 6B               [ 4]  296 	ld	l, e
    0000012B 67               [ 4]  297 	ld	h, a
    0000012C 29               [ 8]  298 	add	hl, hl
    0000012D 29               [ 8]  299 	add	hl, hl
    0000012E 11r00r00         [12]  300 	ld	de, #_shadow_OAM
    00000131 19               [ 8]  301 	add	hl, de
    00000132 5D               [ 4]  302 	ld	e, l
    00000133 54               [ 4]  303 	ld	d, h
                                    304 ;c:\gbdk\include\gb\gb.h:1974: itm->y=y, itm->x=x;
    00000134 F8 00            [12]  305 	ldhl	sp,	#0
    00000136 2A               [ 8]  306 	ld	a, (hl+)
    00000137 12               [ 8]  307 	ld	(de), a
    00000138 13               [ 8]  308 	inc	de
    00000139 7E               [ 8]  309 	ld	a, (hl)
    0000013A 12               [ 8]  310 	ld	(de), a
                                    311 ;jester.h:32: sprite_index++;
    0000013B 03               [ 8]  312 	inc	bc
                                    313 ;jester.h:33: if (sprite_index > 31) // Adjusted to 31 since we have 16 sprites and start from 16
    0000013C 58               [ 4]  314 	ld	e, b
    0000013D 16 00            [ 8]  315 	ld	d, #0x00
    0000013F 3E 1F            [ 8]  316 	ld	a, #0x1f
    00000141 B9               [ 4]  317 	cp	a, c
    00000142 3E 00            [ 8]  318 	ld	a, #0x00
    00000144 98               [ 4]  319 	sbc	a, b
    00000145 CB 7B            [ 8]  320 	bit	7, e
    00000147 28 07            [12]  321 	jr	Z, 00171$
    00000149 CB 7A            [ 8]  322 	bit	7, d
    0000014B 20 08            [12]  323 	jr	NZ, 00172$
    0000014D BF               [ 4]  324 	cp	a, a
    0000014E 18 05            [12]  325 	jr	00172$
    00000150                        326 00171$:
    00000150 CB 7A            [ 8]  327 	bit	7, d
    00000152 28 01            [12]  328 	jr	Z, 00172$
    00000154 37               [ 4]  329 	scf
    00000155                        330 00172$:
    00000155 38 05            [12]  331 	jr	C, 00127$
                                    332 ;jester.h:29: for (int col = 0; col < 4; col++)
    00000157 F8 03            [12]  333 	ldhl	sp,	#3
    00000159 34               [12]  334 	inc	(hl)
    0000015A 18 B2            [12]  335 	jr	00112$
    0000015C                        336 00127$:
                                    337 ;jester.h:27: for (int row = 0; row < 4; row++)
    0000015C F8 02            [12]  338 	ldhl	sp,	#2
    0000015E 34               [12]  339 	inc	(hl)
    0000015F 18 A3            [12]  340 	jr	00115$
    00000161                        341 00105$:
                                    342 ;jester.h:38: SHOW_SPRITES; // Show the sprites on the screen
    00000161 F0r00            [12]  343 	ldh	a, (_LCDC_REG + 0)
    00000163 F6 02            [ 8]  344 	or	a, #0x02
    00000165 E0r00            [12]  345 	ldh	(_LCDC_REG + 0), a
                                    346 ;jester.h:39: }
    00000167 E8 04            [16]  347 	add	sp, #4
    00000169 C9               [16]  348 	ret
                                    349 ;main.c:11: void main()
                                    350 ;	---------------------------------
                                    351 ; Function main
                                    352 ; ---------------------------------
    0000016A                        353 _main::
                                    354 ;main.c:13: DISPLAY_ON;
    0000016A F0r00            [12]  355 	ldh	a, (_LCDC_REG + 0)
    0000016C F6 80            [ 8]  356 	or	a, #0x80
    0000016E E0r00            [12]  357 	ldh	(_LCDC_REG + 0), a
                                    358 ;main.c:15: setup_select_menu_background();
    00000170 CDr00r00         [24]  359 	call	_setup_select_menu_background
                                    360 ;main.c:17: setup_cat();
    00000173 CDr2Ar00         [24]  361 	call	_setup_cat
                                    362 ;main.c:18: setup_jester();
                                    363 ;main.c:24: }
    00000176 C3rC3r00         [16]  364 	jp	_setup_jester
                                    365 	.area _CODE
                                    366 	.area _INITIALIZER
                                    367 	.area _CABS (ABS)
